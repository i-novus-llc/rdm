include:
  - project: ${PIPELINE_REPOSITORY_PREFIX}devenv/gitlab/pipelines
    file:
      - merge-request.gitlab-ci.yml
      - jira.gitlab-ci.yml
      - dev-stand.gitlab-ci.yml

deploy mr stand:
  variables:
    HELM_TIMEOUT: '15m'
    HELM_OPTIONAL_FLAGS: '--wait-for-jobs'

build and verify:
  variables:
    MAVEN_IMAGE_VERSION: 'v4'
    MAVEN_RUN_OPTIONS: '-Djava.io.tmpdir=/tmp'
    MAVEN_EXTRA_BUILD_OPTIONS: '-Pfrontend-build'
    DC_EXTRA_BUILD_CONFIG: '-f .docker-compose/target/docker-compose.build.mr.yml'
  before_script:
    - |
      set -x
      echo "Проверка прав доступа"
      # ls -ld /tmp
      mkdir -p /tmp/rdm/poifiles
      ls -ld /tmp/rdm/poifiles
      touch /tmp/rdm/poifiles/file1.ext # Попытка создать файл в /tmp
      if [ -f /tmp/rdm/poifiles/file1.ext ]; then echo "Файл успешно создан"; else echo "Ошибка создания файла"; fi
    - mvn $MAVEN_RUN_OPTIONS $MAVEN_GOAL $MAVEN_EXTRA_GOAL $MAVEN_PIPELINE_OPTIONS $MAVEN_DEFAULT_BUILD_OPTIONS $MAVEN_EXTRA_BUILD_OPTIONS
    - set +x

autotesting mr stand:
  extends: .autotesting mr stand
  variables:
    AUTOTEST_MODULE_DIR: './ui-test'
    AUTOTEST_PARAMS: '-Drdm.username=admin -Drdm.password=admin'
  artifacts:
    paths:
      - ./ui-test/build/reports/
    expire_in: 1 week

# Т.к. у нас нет dev-стенда -- убираем post dev, чтобы в Jira не проставлялась дата установки на develop
# Нам из dev-stand.gitlab-ci.yml нужен только build
post dev:
  rules:
    - when: never

# Т.к. у нас нет dev-стенда -- убираем deploy dev stand
deploy dev stand:
  variables:
#    При добавлении dev-стенда нужно разкомментировать, иначе ui будет работать неправильно
#    MAVEN_EXTRA_BUILD_OPTIONS: '-Pfrontend-build'
  rules:
    - when: never
