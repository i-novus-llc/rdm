version: "3.6"

networks:
  default:
    driver: overlay
    attachable: true
#    ipam:
#      config:
#      - subnet: 192.168.1.0/24

services:
  db:
    volumes:
    - rdm-db-data:/pg/12/data
    environment:
      PGDATA: /pg/12/data
    ports:
    - "5432"
    command: postgres -c 'max_connections=500'
    deploy:
      resources:
        limits:
          memory: 1024M
      placement:
        constraints:
        - node.labels.type == db

  backend:
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/rdm
      SERVER_TOMCAT_ACCESSLOG_ENABLED: "true"
      JAVA_OPTS: -Xmx200m
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_ACTIVEMQ_BROKERURL: tcp://activemq:61616
    depends_on:
      - db
    restart: on-failure
    ports:
    - "8080"
    deploy:
      restart_policy:
        max_attempts: 3
      resources:
        limits:
          memory: 500M
      placement:
        constraints:
        - node.labels.type == service
    healthcheck:
      test: curl -f http://localhost:8080/monitoring/health | grep -io '^{"status":"UP"' || exit 1
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    environment:
      JAVA_OPTS: -Xmx300m
    depends_on:
      - backend
    ports:
    - "8080"
    deploy:
      restart_policy:
        max_attempts: 3
      resources:
        limits:
          memory: 700M
      placement:
        constraints:
        - node.labels.type == service
    healthcheck:
      test: curl -f http://localhost:8080/monitoring/health | grep -io '^{"status":"UP"' || exit 1
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 40s

  activemq:
    image: "rmohr/activemq:5.15.9"
    ports:
      - 61616
      - 8161
    deploy:
      resources:
        limits:
          memory: 512M
      restart_policy:
        max_attempts: 3

  sync:
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/rdm
      SERVER_TOMCAT_ACCESSLOG_ENABLED: "true"
      JAVA_OPTS: -Xmx200m
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      - db
    restart: on-failure
    ports:
    - "8080"
    deploy:
      restart_policy:
        max_attempts: 3
      resources:
        limits:
          memory: 500M
      placement:
        constraints:
        - node.labels.type == service
    healthcheck:
      test: curl -f http://localhost:8080/monitoring/health | grep -io '^{"status":"UP"' || exit 1
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 40s

  esnsi:
    environment:
      SERVER_TOMCAT_ACCESSLOG_ENABLED: "true"
      RDM_BACKEND_PATH: http://backend:8080/rdm/api
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/rdm
      SPRING_DATASOURCE_USERNAME: rdm
      SPRING_DATASOURCE_PASSWORD: rdm
      JAVA_OPTS: -Xmx200m
      ESNSI_SYNC_DISABLE_MSG_FETCHER: "true" # Только чтобы отдебажиться
    depends_on:
      - db
      - backend
    restart: on-failure
    ports:
      - "8080"
    deploy:
      restart_policy:
        max_attempts: 3
      resources:
        limits:
          memory: 500M
      placement:
        constraints:
          - node.labels.type == service
    healthcheck:
      test: curl -f http://localhost:8080/monitoring/health | grep -io '^{"status":"UP"' || exit 1
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 40s


volumes:
  rdm-db-data:


