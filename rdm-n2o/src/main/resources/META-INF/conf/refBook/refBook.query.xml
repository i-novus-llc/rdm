<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-4.0" object-id="refBook">

    <list result-mapping="['content']" count-mapping="['totalElements']">
        <java class="ru.inovus.ms.rdm.api.service.RefBookService"
              method="search">
            <spring bean="refBookServiceJaxRsProxyClient"/>
            <arguments>
                <argument type="criteria" class="ru.inovus.ms.rdm.n2o.criteria.RefBookCriteriaDateAndStatus"/>
            </arguments>
        </java>
    </list>

    <unique filters="versionId,excludeDraft" result-mapping="#this">
        <java class="ru.inovus.ms.rdm.n2o.service.RefBookController"
              method="searchRefBook">
            <spring/>
            <arguments>
                <argument type="criteria" class="ru.inovus.ms.rdm.n2o.criteria.RefBookCriteriaDateAndStatus"/>
            </arguments>
        </java>
    </unique>

    <fields>
        <field id="id" domain="integer">
            <select mapping="refBookId"/>
            <filters>
                <eq filter-id="id" mapping="refBookId"/>
            </filters>
        </field>

        <field id="refBookId" domain="integer">
            <select mapping="refBookId"/>
        </field>

        <field id="version.id" domain="integer">
            <select mapping="id"/>
            <filters>
                <eq filter-id="versionId" mapping="versionId"/>
            </filters>
        </field>

        <field id="version.version" domain="string">
            <select mapping="
                (archived ? 'В архиве: ' : '') +
                (status?.toString()!='DRAFT' ?
                 version :
                 'Новая (изм. ' +
                    editDate?.format(T(java.time.format.DateTimeFormatter).ofPattern('dd.MM.yyyy')) +
                    ')')
                "/>
        </field>

        <field id="code" domain="string">
            <select/>
            <filters>
                <eq filter-id="code" mapping="code"/>
            </filters>
            <sorting/>
        </field>

        <field id="status" domain="string">
            <filters>
                <eq filter-id="status.id" mapping="status" domain="string"/>
            </filters>
        </field>

        <field id="archived" domain="boolean">
            <select mapping="archived"/>
            <filters>
                <eq filter-id="isArchived" mapping="isArchived"/>
            </filters>
        </field>

        <field id="nonArchived" domain="boolean">
            <select mapping="!archived"/>
            <filters>
                <eq filter-id="nonArchived" mapping="nonArchived"/>
            </filters>
        </field>

        <!-- Passport values -->
        <field id="name" domain="string">
            <select mapping="passport['name']"/>
            <filters>
                <eq filter-id="name" mapping="passport['name']"/>
            </filters>
            <sorting/>
        </field>

        <field id="shortName" domain="string">
            <select mapping="passport['shortName']"/>
        </field>

        <field id="description" domain="string">
            <select mapping="passport['description']"/>
        </field>
        <!-- / Passport values -->

        <field id="category.id" domain="string" name="Категория">
            <select mapping="category"/>
            <filters>
                <eq filter-id="category.id" mapping="category" domain="string"/>
            </filters>
            <sorting/>
        </field>

        <field id="excludeDraft" domain="boolean">
            <select mapping="draftVersionId == null"/>
            <filters>
                <eq filter-id="excludeDraft" mapping="excludeDraft" default-value="false"/>
            </filters>
        </field>

        <field id="excludeByVersionId" domain="integer">
            <filters>
                <eq filter-id="excludeByVersionId" mapping="excludeByVersionId"/>
            </filters>
        </field>

        <field id="draftVersionId" domain="integer">
            <select/>
        </field>

        <field id="lastPublishedVersionId" domain="integer">
            <select/>
        </field>

        <field id="version.isLast" domain="boolean">
            <select mapping="id == draftVersionId or (id == lastPublishedVersionId and draftVersionId == null)"/>
        </field>

        <field id="lastPublishedVersion" domain="string">
            <select mapping="lastPublishedVersion"/>
        </field>

        <field id="hasPublished" domain="boolean">
            <select mapping="lastPublishedVersionId != null"/>
            <filters>
                <eq filter-id="hasPublished" mapping="hasPublished"/>
            </filters>
        </field>

        <field id="lastPublishedVersionFromDate" domain="date">
            <select mapping="lastPublishedVersionFromDate"/>
            <filters>
                <more filter-id="lastPublishedVersionFromDateInterval.begin" mapping="fromDateBegin"/>
                <less filter-id="lastPublishedVersionFromDateInterval.end" mapping="fromDateEnd"/>
            </filters>
            <sorting/>
        </field>

        <field id="hasPrimaryAttribute" domain="boolean">
            <select/>
            <filters>
                <eq filter-id="hasPrimaryAttribute" mapping="hasPrimaryAttribute"/>
            </filters>
        </field>

        <field id="hasReferrer" domain="boolean">
            <select/>
        </field>

        <field id="version.hasDataConflict" domain="boolean">
            <select mapping="hasDataConflict"/>
        </field>

        <field id="version.hasUpdatedConflict" domain="boolean">
            <select mapping="hasUpdatedConflict"/>
        </field>

        <field id="version.hasAlteredConflict" domain="boolean">
            <select mapping="hasAlteredConflict"/>
        </field>

        <field id="version.hasConflict" domain="boolean">
            <select mapping="hasDataConflict || hasStructureConflict"/>
        </field>

        <field id="version.hasRefreshedConflict" domain="boolean">
            <select mapping="hasUpdatedConflict || hasAlteredConflict"/>
        </field>

        <field id="lastHasDataConflict" domain="boolean">
            <select/>
        </field>

        <field id="lastHasDataConflictMsg" domain="string">
            <select mapping="
                (lastHasDataConflict ? 'В опубликованной версии справочника есть ссылки на неактуальные данные' : '')
                "/>
        </field>


        <field id="editDate" domain="date">
            <select/>
        </field>

        <field id="displayVersion" domain="string">
            <select mapping="
                (archived ? 'В архиве: ' : '') +
                (status?.toString() != 'DRAFT' ?
                 version :
                 'Новая (изм. ' +
                    editDate?.format(T(java.time.format.DateTimeFormatter).ofPattern('dd.MM.yyyy')) +
                    ')')
                "/>
        </field>

        <field id="displayCode" domain="string">
            <select mapping="
                    code +
                    (lastPublishedVersion != null ? ' (' + lastPublishedVersion + ')' : '') +
                    (passport['name'] != null ? ' [' + passport['name'] + ']' : '')
                "/>
            <filters>
                <eq filter-id="displayCode" mapping="displayCode"/>
            </filters>
        </field>

    </fields>
</query>