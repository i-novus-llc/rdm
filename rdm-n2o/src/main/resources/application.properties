server.port=${frontend.default.port}
server.servlet.context-path=
spring.mvc.servlet.path=/

# The class name of the JSP servlet.
server.servlet.jsp.class-name=org.apache.jasper.servlet.JspServlet
#server.servlet.jsp.init-parameters.*= # Init parameters used to configure the JSP servlet.
# Whether the JSP servlet is registered.
server.servlet.jsp.registered=true

spring.http.encoding.forceResponse=true
spring.http.encoding.force=true

spring.servlet.multipart.max-file-size=55MB
spring.servlet.multipart.max-request-size=55MB

#\u0417\u0430\u0434\u0430\u043D\u0438\u0435 \u0442\u0430\u0439\u043C\u0430\u0443\u0442\u0430 \u0434\u043B\u044F cxf \u043F\u0440\u043E\u043A\u0441\u0438 \u043A\u043B\u0438\u0435\u043D\u0442\u0430
cxf.jaxrs.client.receive.timeout=1500000
cxf.jaxrs.client.connection.timeout=1500000

#RDM
rdm.backend.path=${backend.default.path}
rdm.user.admin.url=http://docker.one:8182/

#N2O
n2o.engine.mapper=dataset
n2o.ui.header.id=rdm
n2o.ui.min.width=1024px
n2o.ui.homepage.id=refBookList

cxf.jaxrs.client.classes-scan=true
cxf.jaxrs.client.classes-scan-packages=ru.inovus.ms.rdm.service.api
cxf.jaxrs.client.address=${rdm.backend.path}
n2o.engine.rest.url=${rdm.backend.path}

keycloak.redirect-url=http://localhost:${frontend.default.port}
#\u0410\u0434\u0440\u0435\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Keycloak
keycloak.server-url=https://keycloak.i-novus.ru/auth
keycloak.serverUrl=https://keycloak.i-novus.ru/auth
#\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435 \u0434\u043E\u043C\u0435\u043D\u0430
keycloak.realm=rdm

#\u0411\u0430\u0437\u043E\u0432\u044B\u0439 \u0430\u0434\u0440\u0435\u0441 \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u0430\u0443\u0442\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0438
security.oauth2.auth-server-uri=${keycloak.server-url}/realms/${keycloak.realm}/protocol/openid-connect
#\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043A\u043B\u0438\u0435\u043D\u0442\u0430 OAuth2 OpenId Connect
security.oauth2.client.client-id=localhost
#\u0421\u0435\u043A\u0440\u0435\u0442\u043D\u043E\u0435 \u0441\u043B\u043E\u0432\u043E \u043A\u043B\u0438\u0435\u043D\u0442\u0430 OAuth2 OpenId Connect
security.oauth2.client.client-secret=0e603911-ea2b-49aa-9530-2cc01fad8508
#\u0417\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043C\u044B\u0439 \u0443\u0440\u043E\u0432\u0435\u043D\u044C \u0434\u043E\u0441\u0442\u0443\u043F\u0430
security.oauth2.client.scope=read,write
#\u0410\u0434\u0440\u0435\u0441 \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0442\u043E\u043A\u0435\u043D\u0430 \u0430\u0443\u0442\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0438
security.oauth2.client.access-token-uri=${security.oauth2.auth-server-uri}/token
#\u0410\u0434\u0440\u0435\u0441 \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438 \u043E \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u0435
security.oauth2.resource.user-info-uri=${security.oauth2.auth-server-uri}/userinfo
#\u0410\u0434\u0440\u0435\u0441 \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u0435\u0434\u0438\u043D\u043E\u0433\u043E \u0432\u044B\u0445\u043E\u0434\u0430
security.oauth2.sso.logout-uri=${security.oauth2.auth-server-uri}/logout?redirect_uri=${keycloak.redirect-url}
security.oauth2.client.user-authorization-uri=${security.oauth2.auth-server-uri}/auth
sec.admin.rest.url=http://docker.one:8183/api

n2o.access.schema.id=rdm

#true - \u0432\u0441\u0435 \u043E\u0431\u044A\u0435\u043A\u0442\u044B \u043E\u0442\u043A\u0440\u044B\u0442\u044B
n2o.access.N2oObjectAccessPoint.default=true

spring.main.allow-bean-definition-overriding=true